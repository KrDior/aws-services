service:
  name: admin-order-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  region: "eu-central-1"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-central-1:307905271295:table/orders"

functions:
  orders:
    handler: handler.orders
    events:
      - http:
          method: get
          path: orders
          cors: true
  createOrder:
    handler: handler.createOrder
    events:
      - http:
          method: post
          path: orders
          cors: true
  updateOrder:
    handler: handler.updateOrder
    events:
      - http:
          method: put
          path: orders
          cors: true
  deleteOrder:
    handler: handler.deleteOrder
    events:
      - http:
          method: delete
          path: orders
          cors: true
